% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conc_by_tag.R
\name{conc_by_tag}
\alias{conc_by_tag}
\title{Concordance text by choice of tag}
\usage{
conc_by_tag(
  data,
  what = "token",
  tag = "mda_tags",
  match,
  cols = c("corpus", "doc_id", "sentence"),
  tag2 = NULL,
  match2 = NULL,
  ...
)
}
\arguments{
\item{data}{A relational data frame containing the text to concordance.
The data frame is expected to have one column of tokens, in tokenized form, at least one
column of the corresponding tags, and identifying details such as corpus, doc_id etc.}

\item{what}{The name of the column containing the text to concatenate. Default is "token".}

\item{tag}{The name of the column containing the tags to match. Default is "mda_tags".}

\item{match}{The tag to match within the \code{tag} column.}

\item{cols}{The names of the columns to include in the output. By default, these will include
corpus, doc_id, sentence, but need to be changed if the inputting df has different columns.}

\item{tag2}{The name of the second column containing the tags to match (optional).}

\item{match2}{The second tag to match within the \code{tag2} column (optional).}

\item{...}{Additional arguments to be passed onto \code{dtagger::quick_conc}.}
}
\value{
A data frame containing the \code{cols} plus an extra column with the
concatenated text.
}
\description{
This function produces concordance lines of text from \code{data} by finding up to
two tag matches in tokenized text.
}
\details{
The purpose of this function is to allow fine-grained concordance searches of tagged text.
The input should be a dataframe with a column for tokens in tokenized form,
and separate columns for tags, document and corpus details.

Typically, the function can be used with output from \code{udpipe::udpipe_annotate}
and \code{dtagger::dtag_tbl} od \code{dtagger::dtag_directory} functions.

The concordancer can take up to two tag inputs, for example matching all \code{upos == "ADJ"}
tags and \code{dep_rel == "amod"} tags, and seing the resulting key words in context.
}
